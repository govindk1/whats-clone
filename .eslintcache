[{"D:\\vit\\html and css projects\\react\\start_react\\whats-clone\\src\\index.js":"1","D:\\vit\\html and css projects\\react\\start_react\\whats-clone\\src\\App.js":"2","D:\\vit\\html and css projects\\react\\start_react\\whats-clone\\src\\Sidebar.js":"3","D:\\vit\\html and css projects\\react\\start_react\\whats-clone\\src\\SidebarChat.js":"4","D:\\vit\\html and css projects\\react\\start_react\\whats-clone\\src\\Chat.js":"5","D:\\vit\\html and css projects\\react\\start_react\\whats-clone\\src\\firebase.js":"6","D:\\vit\\html and css projects\\react\\start_react\\whats-clone\\src\\Login.js":"7","D:\\vit\\html and css projects\\react\\start_react\\whats-clone\\src\\reducer.js":"8","D:\\vit\\html and css projects\\react\\start_react\\whats-clone\\src\\StateProvider.js":"9"},{"size":616,"mtime":1607418492256,"results":"10","hashOfConfig":"11"},{"size":814,"mtime":1607422063820,"results":"12","hashOfConfig":"11"},{"size":2255,"mtime":1607422314745,"results":"13","hashOfConfig":"11"},{"size":1554,"mtime":1607430380086,"results":"14","hashOfConfig":"11"},{"size":4291,"mtime":1607429568686,"results":"15","hashOfConfig":"11"},{"size":613,"mtime":1607365555583,"results":"16","hashOfConfig":"11"},{"size":1295,"mtime":1607421341323,"results":"17","hashOfConfig":"11"},{"size":422,"mtime":1607422001075,"results":"18","hashOfConfig":"11"},{"size":388,"mtime":1607421391773,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1d2hk0z",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\vit\\html and css projects\\react\\start_react\\whats-clone\\src\\index.js",[],["43","44"],"D:\\vit\\html and css projects\\react\\start_react\\whats-clone\\src\\App.js",["45"],"import React from \"react\"\nimport './App.css';\nimport Sidebar from \"./Sidebar\"\nimport Chat from \"./Chat.js\"\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\"\nimport Login from \"./Login.js\"\nimport {useStateValue} from \"./StateProvider\"\n\nfunction App() {  \n\n  const [{user}, dispatch] = useStateValue();  \n  \n\n  return (\n    <div className=\"app\">\n      {!user ? (\n        <Login />\n        ):(\n          <div className=\"app__body\">\n        \n        <BrowserRouter>\n        <Sidebar />\n          <Switch>\n            \n\n            <Route exact path=\"/rooms/:roomId\">\n              <Chat />\n            </Route>\n\n            <Route exact path=\"/\">\n              <Chat />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </div>\n        )}\n      \n    </div>\n  );\n}\n\nexport default App;\n","D:\\vit\\html and css projects\\react\\start_react\\whats-clone\\src\\Sidebar.js",["46"],"import React, { useEffect, useState } from 'react'\r\nimport {Avatar, IconButton} from \"@material-ui/core\"\r\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\"\r\nimport ChatIcon from \"@material-ui/icons/Chat\"\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\"\r\nimport {SearchOutlined} from \"@material-ui/icons\"\r\nimport SidebarChat from \"./SidebarChat\"\r\nimport \"./Sidebar.css\"\r\nimport db from \"./firebase\"\r\nimport { useStateValue } from './StateProvider'\r\n\r\nfunction Sidebar() {\r\n\r\n    const [rooms, setRooms] = useState([]);\r\n    const [{user}, dispatch] = useStateValue();\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n\r\n        //onSnapshot set up some kind of listener so like whenever the database updates this code will run\r\n        db.collection('rooms').onSnapshot(snapshot => {\r\n            console.log(\"govind\")\r\n            setRooms(snapshot.docs.map(doc => \r\n                ({\r\n                    id: doc.id,\r\n                    data: doc.data()\r\n                }))\r\n                )\r\n            }\r\n        );\r\n\r\n        \r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar__header\">\r\n                <Avatar src = {user?.photoURL}/>\r\n                <div className=\"sidebar__headerRight\">\r\n                    <IconButton>\r\n                        <DonutLargeIcon />\r\n                    </IconButton>\r\n                    \r\n                    <IconButton>\r\n                        <ChatIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar__search\">\r\n                <div className=\"sidebar__searchContainer\">\r\n                    <SearchOutlined />\r\n                    <input placeholder=\"Search or start new chat\" type=\"text\"></input>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar__chats\">\r\n                <SidebarChat addNewChat/>\r\n                {rooms.map(room => {\r\n                    return <SidebarChat key ={room.id} id={room.id} name={room.data.name} />\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Sidebar\r\n","D:\\vit\\html and css projects\\react\\start_react\\whats-clone\\src\\SidebarChat.js",[],"D:\\vit\\html and css projects\\react\\start_react\\whats-clone\\src\\Chat.js",["47","48"],"import React, {useState, useEffect} from 'react'\r\nimport \"./Chat.css\"\r\nimport {Avatar, IconButton} from \"@material-ui/core\"\r\nimport { AttachFile, SearchOutlined, MoreVert } from '@material-ui/icons';\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\"\r\nimport MicIcon from \"@material-ui/icons/Mic\"\r\nimport {useParams} from \"react-router-dom\"\r\nimport db from \"./firebase\"\r\nimport { useStateValue } from './StateProvider';\r\nimport firebase from \"./firebase\"\r\n\r\n\r\nfunction Chat() {\r\n\r\n    const [seed, setSeed] = useState('');\r\n    const [input, setInput] = useState(\"\");\r\n    const {roomId} = useParams();\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n    const [{user}, dispatch] = useStateValue();\r\n\r\n    //so whenever roomId changes in url useEffect will be called\r\n    useEffect(() => {\r\n        if(roomId){\r\n            db.collection('rooms').doc(roomId)\r\n            .onSnapshot(snapshot => \r\n                setRoomName(snapshot.data()?.name));\r\n            db.collection('rooms')\r\n            .doc(roomId)\r\n            .collection(\"messages\")\r\n            .orderBy('timestamp', 'asc')\r\n            .onSnapshot((snapshot) => setMessages(snapshot.docs.map((doc) => doc.data())\r\n            ));\r\n        }\r\n    }, [roomId])\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        db.collection('rooms').doc(roomId).collection('messages').add({\r\n            message:input,\r\n            name:user.displayName,\r\n            timestamp: new Date(),\r\n\r\n        })\r\n        setInput(\"\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random()*5000));\r\n    }, [roomId])\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat__header\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n                \r\n                <div className=\"chat__headerInfo\">\r\n                    <h3>{roomName}</h3>\r\n                    <p>{new Date(messages[messages.length - 1]?.timestamp?.toDate()).toUTCString()}</p>\r\n                </div>\r\n\r\n                <div className=\"chat__headerRight\">\r\n                    <IconButton>\r\n                        <SearchOutlined />\r\n                    </IconButton>\r\n            \r\n                    <IconButton>\r\n                        <AttachFile />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <MoreVert />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"chat__body\">\r\n                {messages.map(message =>\r\n                    {return message.name === user.displayName ? \r\n                        (<p className=\"chat__message chat__reciever\">\r\n                            {message.message}\r\n                            <span className=\"chat__name\">\r\n                                {message.name}\r\n                            </span>\r\n                        \r\n                            <span className=\"chat__timestamp\">\r\n                                {new Date(message.timestamp?.toDate()).toUTCString()}\r\n                            </span>\r\n                        </p>):\r\n                        (<p className=\"chat__message\">\r\n                        {message.message}\r\n                        <span className=\"chat__name\">\r\n                            {message.name}\r\n                        </span>\r\n                    \r\n                        <span className=\"chat__timestamp\">\r\n                            {new Date(message.timestamp?.toDate()).toUTCString()}\r\n                        </span>\r\n                    </p>\r\n\r\n                        )\r\n                     \r\n                    }\r\n                )}\r\n                \r\n                \r\n                \r\n\r\n            </div>\r\n\r\n            <div className=\"chat__footer\">\r\n                <InsertEmoticonIcon />\r\n                <form>\r\n                    <input value={input} onChange={e => setInput(e.target.value)} placeholder=\"Type a message\" type=\"text\"></input>\r\n                    <button onClick={sendMessage} type=\"submit\">Send a message</button>\r\n                </form>\r\n                <MicIcon />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","D:\\vit\\html and css projects\\react\\start_react\\whats-clone\\src\\firebase.js",[],"D:\\vit\\html and css projects\\react\\start_react\\whats-clone\\src\\Login.js",["49"],"import React from 'react'\r\nimport {Button} from \"@material-ui/core\"\r\nimport \"./Login.css\"\r\nimport {auth, provider} from \"./firebase\"\r\nimport {useStateValue} from \"./StateProvider\"\r\nimport { actionTypes } from './reducer'\r\n\r\n\r\nfunction Login() {\r\n\r\n    const [{user}, dispatch] = useStateValue();\r\n    \r\n    //sign in with google\r\n    const signIn = () => {\r\n        auth.signInWithPopup(provider)\r\n        .then(result => {\r\n            //console.log(result)\r\n            dispatch({\r\n                type:actionTypes.SET_USER,\r\n                user:result.user\r\n            })\r\n            \r\n        })\r\n        .catch((error) => alert(error.message));\r\n    }\r\n    //end of sign in with google\r\n    \r\n    return (\r\n        \r\n        <div className=\"login\">\r\n            <div className=\"login__container\">\r\n\r\n                <img \r\n                    src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\"\r\n                    alt=\"\"    \r\n                />\r\n\r\n                <div className=\"login__text\">\r\n                    <h1>Sign in to WhatsApp</h1>\r\n                </div>\r\n\r\n                <Button type=\"submit\" onClick={signIn}>\r\n                    Sign In With Google\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","D:\\vit\\html and css projects\\react\\start_react\\whats-clone\\src\\reducer.js",[],"D:\\vit\\html and css projects\\react\\start_react\\whats-clone\\src\\StateProvider.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":11,"column":18,"nodeType":"56","messageId":"57","endLine":11,"endColumn":26},{"ruleId":"54","severity":1,"message":"55","line":15,"column":20,"nodeType":"56","messageId":"57","endLine":15,"endColumn":28},{"ruleId":"54","severity":1,"message":"58","line":10,"column":8,"nodeType":"56","messageId":"57","endLine":10,"endColumn":16},{"ruleId":"54","severity":1,"message":"55","line":20,"column":20,"nodeType":"56","messageId":"57","endLine":20,"endColumn":28},{"ruleId":"54","severity":1,"message":"59","line":11,"column":13,"nodeType":"56","messageId":"57","endLine":11,"endColumn":17},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'firebase' is defined but never used.","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]